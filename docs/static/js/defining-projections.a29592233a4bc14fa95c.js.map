{"version":3,"sources":["/Users/jbadeau/git/ProjectIt/packages/docs/src/defining_projections.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_jbadeau_git_ProjectIt_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","src","alt","className","align","isMDXComponent"],"mappings":"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","file":"static/js/defining-projections.99a5a21c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"defining-projections\"\n    }}>{`Defining Projections`}</h1>\n    <p>{`The layout fo everything in ProjectIt is defined using boxes.`}<br parentName=\"p\"></br>{`\n`}{`A box is a rectangular area in the editor.`}<br parentName=\"p\"></br>{`\n`}{`The are many different types of boxes in ProjectIt, e.g. a LabelBox for static text, a TextBox for editable text, and SVG box for SVG graphics, etc. etc.  `}</p>\n    <p>{`The first step in creating a projectional editor is o define the projection for language.`}<br parentName=\"p\"></br>{`\n`}{`To do this, you need to define a mapping from the constructs in your language to `}<em parentName=\"p\">{`boxes`}</em>{`.  `}</p>\n    <p>{`A small example to start with:  `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../public/images/mapping-example-stringliteral.svg\",\n        \"alt\": null\n      }}></img>{`  `}</p>\n    <p>{`In the language we are using we have the concept of a `}<em parentName=\"p\">{`StringLiteral`}</em>{`.`}<br parentName=\"p\"></br>{`\n`}{`The projection maps this to a horizontal list of labels with fixed text \",`}<br parentName=\"p\"></br>{`\n`}{`an editable text with the value of the StringLiteral and then another label.  `}</p>\n    <p>{`In TypeScript this projection might look something like:  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`new HorizontalListBox( [  \n new LabelBox(\"\\\\\"\"), new TextBox(stringLiteral.value),  \n new LabelBox(\"\\\\\"\") ]);\\`\\`\\`  \n`}</code></pre>\n    <p>{`b\nWe can see that the user interacts with the projection.`}<br parentName=\"p\"></br>{`\n`}{`To be able to define the user interaction, we need to be able to know`}<br parentName=\"p\"></br>{`\n`}{`which part of the projection the user is working with.  `}</p>\n    <p>{`Therefore we need to know of which element in the model/AST a box is a projection`}<br parentName=\"p\"></br>{`\n`}{`and also be able to distinguish the different boxes for one element.`}<br parentName=\"p\"></br>{`\n`}{`For this purpose we give each Box in the projection a `}<em parentName=\"p\">{`role`}</em>{`.  `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../public/images/mapping-example-stringliteral-with-roles.svg\",\n        \"alt\": null\n      }}></img>{`  `}</p>\n    <p>{`In this picture the roles are shown above the boxes in green.`}<br parentName=\"p\"></br>{`\n`}{`We cabn now show the full typescript code for creating this projection.`}<br parentName=\"p\"></br>{`\n`}{`Given  that `}<inlineCode parentName=\"p\">{`literal`}</inlineCode>{` is the StringLiteral object:  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`include::{demodir}/editor/DemoProjection.ts[tag=StringLiteral,indent=0]  \n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The overall horizontal list box to group everything  `}</li>\n      <li parentName=\"ul\">{`The first label box for the start quote  `}</li>\n      <li parentName=\"ul\">{`The text box for the value of the string literal  `}</li>\n      <li parentName=\"ul\">{`The second label box for the end quote  `}</li>\n    </ul>\n    <p>{`All box roles within the projection for a specific element should have a unique role.`}<br parentName=\"p\"></br>{`\n`}{`This way we cn identify every box buy its model element + its role.  `}</p>\n    <h2 {...{\n      \"id\": \"box\"\n    }}>{`Box`}</h2>\n    <p>{`A Box is an abstract class describing the features that are common for all boxes.`}<br parentName=\"p\"></br>{`\n`}{`As explained earlier, each box has a mandatory model element and role.  `}</p>\n    <h2 {...{\n      \"id\": \"labelbox\"\n    }}>{`LabelBox`}</h2>\n    <p>{`A LabelBox shows a non-editable text.`}<br parentName=\"p\"></br>{`\n`}{`The text itself can either be a fixed string (1) ,  or it can be defined as a function (2).  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`new LabelBox(element, \"role\", \"fixed text\")         <1>  \nnew LabelBox(element, \"role\", () => element.value)  <2>  \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"textbox\"\n    }}>{`TextBox`}</h2>\n    <p>{`A TextBox shows an editable text.`}<br parentName=\"p\"></br>{`\n`}{`In addition to the element and the role a text box needs two function parameters.`}<br parentName=\"p\"></br>{`\n`}{`The first function to get the value of the text,`}<br parentName=\"p\"></br>{`\n`}{`the second function to set the value of the text.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`new TextBox(  \n  element,  \n \"role\", () => element.stringValue,  \n (newValue: string) => element.stringValue = newValue)  \n`}</code></pre>\n    <p>{`There is a number of boxes available  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Primitive Boxes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Grouping boxes`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LabelBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HorizontalListBox`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TextBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`VerticalListBox`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LineBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GridBox`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TextBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SpacerBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`AliasBox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"svgbox\"\n    }}>{`SvgBox`}</h2>\n    <h2 {...{\n      \"id\": \"listbox\"\n    }}>{`ListBox`}</h2>\n    <h3 {...{\n      \"id\": \"horizontallistbox\"\n    }}>{`HorizontalListBox`}</h3>\n    <h3 {...{\n      \"id\": \"verticallistbox\"\n    }}>{`VerticalListBox`}</h3>\n    <h3 {...{\n      \"id\": \"verticalmodelelementlistbox\"\n    }}>{`VerticalModelElementListBox`}</h3>\n    <h2 {...{\n      \"id\": \"gridbox\"\n    }}>{`GridBox`}</h2>\n    <h2 {...{\n      \"id\": \"selectbox\"\n    }}>{`SelectBox`}</h2>\n    <h2 {...{\n      \"id\": \"aliasbox\"\n    }}>{`AliasBox`}</h2>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}