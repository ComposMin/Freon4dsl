editor StartEditor for language Demo

DemoNumberLiteralExpression {
    @projection normal
        [${self.value}]
}


DemoAttribute {
    @projection attribuut [ ${self.name} : ${self.declaredType} ]
}

DemoStringLiteralExpression {
    @projection DemoStringLiteralExpression
        [
        '${self.value}'
        ]
    @trigger "'"
}

DemoIfExpression {
    @projection DemoIfExpression
        [
        if (${self.condition}) then
                  ${self.whenTrue}
        else
           ${self.whenFalse}
        endif
        ]

    @trigger "if"
    @symbol "if"
}

/*
DemoIfExpression {
    @projection DemoIfExpression
        [
        (${ self.condition } ? ${ self.whenTrue } : ${self.whenFalse} )
        ]

    @trigger "if"
    @symbol "if"
}
*/
DemoPlusExpression {
    @symbol "+"
}

DemoMultiplyExpression {
    @symbol "*"
}

DemoDivideExpression {
    @symbol "/"
}
DemoLessThenExpression {
    @symbol "<"
}
DemoOrExpression {
    @symbol "or"
}



DemoEntity {
    @trigger "entity"
}

/*
DemoFunctionCallExpression {
    @projection gewoon
        [
        ${self.name} (  )
        ]
    @trigger "function2"
}
*/

DemoFunctionCallExpression {
    @projection DemoFunctionCallExpression
        [
        CALL ${self.functionDefinition} (  )
        ]
    @trigger "function"
}


DemoModel {
// Note that self.type is optional, therefore this projection gives problems in the parser
//    @projection DemoModel
//        [
//        model ${self.name} {
//        main: ${self.main}
//        type: ${self.type}
//        types:
//            ${self.types
//                @vertical
//                @terminator [\n\n]
//            }
//        entities:
//            ${self.entities
//                @vertical
//                @terminator [\n\n]
//            }
//        model wide functions:
//            ${self.functions @horizontal @separator [\n] }
//        }
//        ]
    @projection DemoModel
        [
        model ${self.name} {
        main: ${self.main}
        [?type: ${self.type}]
        types:
            ${self.types
                @vertical
                @terminator [\n\n]
            }
        entities:
            ${self.entities
                @vertical
                @terminator [\n\n]
            }
        model wide functions:
            ${self.functions @horizontal @separator [\n] }
        }
        ]
}
