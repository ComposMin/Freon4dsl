editor XXX for language octopus

UmlPackage {
    @projection normal
        [<package> ${self.name}
        ${ self.classifiers @vertical @separator [\n] }
        <associations>
        ${ self.associations @vertical @terminator [;] }
        <endpackage>
        ]
}

//PathName {
//    @projection normal
//        [${self.names @horizontal @separator [::] }]
//}
Association {
    @projection normal
        [${self.end1} <-> ${self.end2}]
}
AssociationClass {
    @projection normal
        [[?${self.visibility}] <associationclass> ${self.name}
        ${self.end1} <-> ${self.end2}
        [?<attributes> ${self.attributes @vertical @separator [\n]}]
        [?<operations> ${self.operations @vertical @terminator [\n] }]
//        [?<states> ${self.states @vertical @terminator [;] }]
//        [?<invariants> ${self.invariants @vertical @terminator [;] }]
        <endassociationclass>
        ]
}

AssociationEnd {
    @projection normal
        [[?${self.visibility}] ${self.baseType}.${self.name}${self.multiplicity}]
}

UmlInterface  {
    @projection normal
        [[?${self.visibility}] <interface> ${self.name}
        [?<specializes> ${self.generalizations @horizontal @separator [, ] }]
        [?<attributes> ${self.attributes @vertical @terminator [\n]}]
        [?<operations> ${self.operations @vertical @terminator [\n] }]
//        [?<invariants> ${self.invariants @vertical @terminator [;] }]
        <endinterface>
        ]
}

UmlClass {
    @projection normal
        [[?${self.visibility}] [?${self.isAbstract @keyword [<abstract>]}] <class> ${self.name}
        [?<specializes> ${self.generalizations @horizontal @separator [, ] }]
        [?<implements> ${self.interfaces @horizontal @separator [, ] }]
        [?<attributes> ${self.attributes @vertical @terminator [\n] }]
        [?<operations> ${self.operations @vertical @terminator [\n] }]
        <endclass>
        ]
}
DataType {
    @projection normal
        [[?${self.visibility}] <datatype> ${self.name}
        [?<specializes> ${self.generalizations @horizontal @separator [, ] }]
        [?<implements> ${self.interfaces @horizontal @separator [, ] }]
        [?<attributes> ${self.attributes @vertical @terminator [\n] }]
        [?<operations> ${self.operations @vertical @terminator [\n] }]
//        [?<invariants> ${self.invariants @vertical @terminator [;] }]
        <enddatatype>
        ]
}

EnumerationType {
    @projection normal
        [[?${self.visibility}] <enumeration> ${self.name}
        <values> ${self.literals @vertical @terminator [;] }
        <endenumeration>
        ]
}
EnumLiteral {
    @projection normal
            [${self.name}]
}
//AssociationClass {
//    @projection normal
//        [<associationclass> ${self.name}
//        <endassociationclass>
//        ]
//}

Attribute {
    @projection normal
        [[?${self.visibility}] ${self.name}[?${self.multiplicity}] : ${self.type} ; ]
}

Operation {
    @projection normal
    [[?${self.visibility}] ${self.name} ( [?${self.parameters @horizontal @separator [, ]}] ) [?: ${self.returnType}] ;
    ]
}
Parameter {
    @projection normal
        [[?${self.directionKind}] ${self.name} : ${self.type}]
}
MultiplicityKind {
    @projection normal [\[ ${self.lowerBound}..${self.upperBound} \]]
}

VisibilityKind {
    @projection normal [
        ${PUBLIC @keyword [+]}
        ${PRIVATE @keyword [-]}
        ${PROTECTED @keyword [#]}
    ]
}

ParameterDirectionKind {
    @projection normal [
    ${IN @keyword [<in>]}
    ${OUT @keyword [<out>]}
    ${INOUT @keyword [<inout>]}
    ]
}
