editor StartEditor for language Demo

DemoAttribute {
    @projection attribuut [ ${self.name} : ${self.declaredType} = ${self.somePrimAttr}]
}

DemoEntity  {
@projection [${self.name} base ${self.baseEntity @vertical @separator [, ]}
    start
        ${self.attributes @vertical @separator [, ]}
    end
]
}

DemoNumberLiteralExpression {
    @projection normal
        [${self.value}]
}

DemoStringLiteralExpression {
    @projection DemoStringLiteralExpression
        [
        '${self.value}'
        ]
    @trigger "'"
}

DemoIfExpression {
    @projection DemoIfExpression
        [
        if (${self.condition}) then
                  ${self.whenTrue}
        else
           ${self.whenFalse}
        endif
        ]

    @trigger "if"
    @symbol "if"
}

//DemoIfExpression {
//    @projection DemoIfExpression
//        [
//        (${ self.condition } ? ${ self.whenTrue } : ${self.whenFalse} )
//        ]
//
//    @trigger "if"
//    @symbol "if"
//}

DemoPlusExpression {
    @symbol "+"
}

DemoMultiplyExpression {
    @symbol "*"
}

DemoDivideExpression {
    @symbol "/"
}
DemoLessThenExpression {
    @symbol "<"
}
DemoOrExpression {
    @symbol "or"
}

//DemoEntity {
//    @trigger "entity"
//}

//DemoFunctionCallExpression {
//    @projection gewoon
//        [
//        ${self.name} (  )
//        ]
//    @trigger "function2"
//}

DemoFunctionCallExpression {
    @projection DemoFunctionCallExpression
        [
        CALL ${self.functionDefinition} (  )
        ]
    @trigger "function"
}

DemoUnit {
    @projection DemoUnit
        [
        unit ${self.name} {
        main: ${self.main}
        unit wide functions:
            ${self.functions @horizontal @separator [\n] }
        }
        ]
}

