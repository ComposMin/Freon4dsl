import { Parser } from "pegjs";
import * as fs from "fs";

export class TryParser<DEFINITION> {
    // No known type, as this is a Javascript parser object generated by pegjs.
    parser: Parser;

    parse(definitionFile: string): DEFINITION {
        // Check language file
        if (!fs.existsSync(definitionFile)) {
            console.error(this, "File '" + definitionFile + "' does not exist, exiting.");
            throw new Error("file not found.");
        }
        const langSpec: string = fs.readFileSync(definitionFile, { encoding: "UTF8" });
        // Parse Language file
        let model: DEFINITION = null;
        try {
            model = this.parser.parse(langSpec);
        } catch (e) {
            // syntax error
            let errorstr = `${definitionFile}: ${e} ${e.location && e.location.start ? `[line ${e.location.start.line}, column ${e.location.start.column}]` : ``}`;
            console.error(errorstr);
            // throw new Error("syntax error.");
        }
        return model;
    }
}
