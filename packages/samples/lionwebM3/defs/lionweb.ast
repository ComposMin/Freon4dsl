 language LIonCoreM3

model LIonCoreM3 {
    name: identifier;
    units: Language[];
}

interface INamed {
    name: identifier;
}

interface NamespaceProvider {
}

modelunit Language implements INamed, NamespaceProvider {
    key: string;
    version: string;
    elements: LanguageElement[];
    reference dependsOn: Language[];
    // Freon specific addition
    file-extension = "lmm";
}

interface NamespacedEntity base INamed {
    key: string;
}

abstract concept LanguageElement implements NamespacedEntity {
}

concept Property base Feature {
    reference type: Datatype;
}

abstract concept Feature implements NamespacedEntity {
  optional: boolean;
}

abstract concept FeaturesContainer base LanguageElement implements NamespaceProvider {
    features: Feature[];
}

concept Concept base FeaturesContainer {
    abstract: boolean;
    partition: boolean;
    reference extends?: Concept;
    reference implements: ConceptInterface[];
}

abstract concept Link base Feature  {
    multiple: boolean;
    reference type: FeaturesContainer;
}

concept ConceptInterface  base FeaturesContainer {
    reference extends: ConceptInterface[];
}

concept Containment  base Link { }

concept Reference base Link {
 }

abstract concept Datatype base LanguageElement {
}

limited PrimitiveType base Datatype {
    key: string;
    Boolean = { name: "Boolean", key: "LIonCore-builtins-Boolean" }
    String = { name: "String", key: "LIonCore-builtins-String" }
    Integer = { name: "Integer", key: "LIonCore-builtins-Integer" }
    JSON = { name: "JSON", key: "LIonCore-builtins-JSON" }
}

concept Enumeration base Datatype implements NamespaceProvider {
    literals: EnumerationLiteral[];
}

concept EnumerationLiteral implements NamespacedEntity {
}

