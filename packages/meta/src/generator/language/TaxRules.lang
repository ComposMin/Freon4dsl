language TaxRules

concept TaxPayer {
    name: string
    Tax-id: TaxID
    @observablepart incomeParts: IncomePart[]
    total_income: Money
    total_taxes: Money
}

concept IncomePart {
    @reference source: IncomeSource
    @obeservablepart deduction: Money;
    amount: Money
}

concept Money {
    amount: number
}

concept Percentage {
    internalPerc: number
}

concept IncomeSource {
    name: string
    address?: string
    Tax-id: TaxID
    sourceType: SourceType
}

concept TaxID {
    id : number;
}

concept TaxRule {
    name: string
    applicableTo: SourceType
    expression: Expression
}

Enumeration SourceType {
    Company
    NGO
    Royalties
    Gift
}

// import Expression lib

concept PercentageExpression base BinaryExpression {
    @part left : Percentage
    @part right : Expression @require right.type = number
    @editor symbol: string = "*"
    @editor priority: number = "2"
}

// examples
// Rule NGO_income_tax_free(incomePart: IncomePart) = if (incomePart.sourceType == SourceType.NGO) toBePaid = 0;
// Rule Company_tax_high(incomePart: IncomePart) = if (incomePart.sourceType == SourceType.Company) toBePaid = 40% * incomePart.amount;
// Rule Royalties_tax_low(incomePart: IncomePart) = if (incomePart.sourceType == SourceType.Royalties) toBePaid = 10% * incomePart.amount;
// Rule Gift_tax_high(incomePart: IncomePart) = if (incomePart.sourceType == SourceType.Company) toBePaid = 20% * incomePart.amount - incomePart.deduction;

// Rule total_taxes(tp: TaxPayer) = tp.incomeParts->sum( allRules(incomePart) ) - generalDeduction;
