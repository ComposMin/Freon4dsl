expressions for language Demo

AA {
    self.entities.expr;
    self.functions;
}

BB {
    self.simpleprop;
    self.int_attr;
    self.int_functions;
    self.attrutes;
    self.functions;
    //DemoAttributeType:Inter;
    container;
    typeof ( self.attributes );
    typeof ( container );
    typeof ( xx );
}

CC {
     DemoVariable.fgg;
}

DD {
    conformsTo (self.declaredType);
    self.parameters;
    DemoFunction.parameters;
}

EE {
    self.extra;
}

FF {
    equalsType( self.expr, DemoAttributeType:Integer ) ;
}

DemoBinaryExpression {
    equalsType( self.left, DemoAttributeType:Integer );
    equalsType( self.right, DemoAttributeType:Integer );
}
DemoMultiplyExpression {
    equalsType( self.left, DemoAttributeType:Integer );
    equalsType( self.right, DemoAttributeType:Integer );
}

DemoPlusExpression {
    equalsType( self.left, DemoAttributeType:Integer );
    equalsType( self.right, DemoAttributeType:Integer );
    conformsTo( self.left, self.right );
}

DemoDivideExpression {
    equalsType( self.left, DemoAttributeType:Integer );
    equalsType( self.right, DemoAttributeType:Integer );
}

DemoAndExpression {
    equalsType( self.left, DemoAttributeType:Boolean );
    equalsType( self.right, DemoAttributeType:Boolean );
}

DemoOrExpression {
    equalsType( self.left, DemoAttributeType:Boolean );
    equalsType( self.right, DemoAttributeType:Boolean );
}

DemoComparisonExpression {
    equalsType( self.left, self.right );
}

DemoIfExpression {
    equalsType( self.condition, DemoAttributeType:Boolean );
    conformsTo( self.whenTrue, self.whenFalse );
}

*/
