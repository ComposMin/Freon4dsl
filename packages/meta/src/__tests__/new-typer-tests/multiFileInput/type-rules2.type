typer

// What are types?
istype { TypeDeclaration }

// Which concepts have a type?


// What are the top and bottom types?


// Which type does an expression have?
SimpleExp1 {
    infertype PredefinedType:Simple1;
}

SimpleExp2 {
    infertype PredefinedType:Simple2;
}

NamedExp {
    infertype self.myType;
}

PlusExp {
    infertype (commonSuperType(self.left, self. right) as Type);
}

// Which types are 'equal' to each other?
GenericType {
    equalsto x:GenericType where {
            x.innerType equalsto self.innerType;
            x.kind equalsto self.kind;
        };
    conformsto x:GenericType where {
            // both conditions must be true
            self.innerType conformsto x.innerType;
            self.kind conformsto x.kind;
        };
}
