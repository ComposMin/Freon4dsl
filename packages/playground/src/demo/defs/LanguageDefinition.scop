scoper Demo for language Demo

isnamespace { DemoModel DemoEntity DemoFunction DemoAttributeType }

// Overerving
DemoEntity {
    namespace_addition = this.baseEntity
    //namespace_addition = this.name
    //namespace_addition = this.declaredType
    //namespace_addition = this.attributes
}
/*
DemoAttribute {
    namespace_addition = this.declaredType
}

DemoEntity {
    namespace {
	    this
		+ this.baseEntity
		+ this.implements
	}
	scope {
		blabla + andereBlaBla
	}
}

@namespace DemoEntityInterface {
    this
    + this.baseInterface
}
*/
// TODO Define Appliedfeature in .lang file
/*
AppliedFeature {
	scope {
		typeof this.source
	}
}
*/
//    t = typer.inferType(this.source) exclude: attributes where visibility = 'private'
//    include: if( t.friends.includes(context)) then t.attributes where visibility = 'friends'
