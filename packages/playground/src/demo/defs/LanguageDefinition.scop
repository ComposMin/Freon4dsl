scoper Demo for language Demo

isnamespace { DemoModel DemoEntity DemoFunction DemoAttributeType }

// Inheritance scope
DemoEntity {
    namespace_addition = self.baseEntity
    // the following are used for testing
    //namespace_addition = self.name
    //namespace_addition = self.declaredType
    //namespace_addition = self.attributes
}
/* to be added when interfaces are supported
DemoEntityInterface {
    namespace_addition = self.baseInterface
}
*/

AppliedFeature {
	scope = typeof( container )
}

//    t = typer.inferType(this.source) exclude: attributes where visibility = 'private'
//    include: if( t.friends.includes(context)) then t.attributes where visibility = 'friends'
