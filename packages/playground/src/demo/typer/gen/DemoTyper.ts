// Generated by the ProjectIt Language Generator.
import { AllDemoConcepts } from "../../language";
import { PiTyper } from "@projectit/core";
import { DemoConceptType } from "../../language/Demo";
import {
    DemoModel,
    DemoEntity,
    DemoAttribute,
    DemoFunction,
    DemoVariable,
    DemoExpression,
    DemoPlaceholderExpression,
    DemoLiteralExpression,
    DemoStringLiteralExpression,
    DemoNumberLiteralExpression,
    DemoBooleanLiteralExpression,
    DemoAbsExpression,
    DemoBinaryExpression,
    DemoMultiplyExpression,
    DemoPlusExpression,
    DemoDivideExpression,
    DemoAndExpression,
    DemoOrExpression,
    DemoComparisonExpression,
    DemoLessThenExpression,
    DemoGreaterThenExpression,
    DemoEqualsExpression,
    DemoFunctionCallExpression,
    DemoIfExpression,
    DemoVariableRef
} from "../../language";
import { DemoAttributeType } from "../../language";

export class DemoTyper implements PiTyper {
    equalsType(elem1: AllDemoConcepts, elem2: AllDemoConcepts): boolean {
        if (this.inferType(elem1).$id === this.inferType(elem2).$id) return true;
        return false;
    }

    inferType(modelelement: AllDemoConcepts): DemoType {
        return null;
    }

    conformsTo(elem1: DemoType, elem2: DemoType): boolean {
        if (this.inferType(elem1) === DemoAttributeType.ANY || this.inferType(elem2) === DemoAttributeType.ANY) return true;
        if (this.inferType(elem1).$id === this.inferType(elem2).$id) return true;
        return false;
    }

    conformList(typelist1: DemoType[], typelist2: DemoType[]): boolean {
        if (typelist1.length !== typelist2.length) return false;
        let result: boolean = true;
        for (let index in typelist1) {
            result = this.conformsTo(typelist1[index], typelist2[index]);
            if (result == false) return result;
        }
        return result;
    }

    isType(elem: AllDemoConcepts): boolean {
        // ook hier alle namen gemerkt met @isType
        if (elem instanceof DemoEntity) {
            return true;
        } else if (elem instanceof DemoAttributeType) {
            return true;
        }
        return false;
    }
}
