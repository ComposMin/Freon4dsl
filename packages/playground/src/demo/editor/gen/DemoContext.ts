// Generated by the ProjectIt Language Generator.
import { action, observable } from "mobx";
import { PiContext, PiExpression } from "@projectit/core";
import { DemoInitialization } from "../DemoInitialization";
import { DemoModel } from "../../language/DemoModel";
import { DemoPlaceholderExpression } from "../../language/DemoPlaceholderExpression";

export class DemoContext implements PiContext {
    @observable private _rootElement: DemoModel;

    model: DemoModel = new DemoModel();

    constructor(initialExpression?: DemoModel) {
        this.rootElement = initialExpression ? initialExpression : this.model;
        this.initialize();
    }

    set rootElement(exp: DemoModel) {
        this._rootElement = exp;
        this._rootElement.container = null;
        exp.container = this;
        exp.propertyIndex = undefined;
        exp.propertyName = "rootElement";
    }

    get rootElement(): DemoModel {
        return this._rootElement;
    }

    toString(): string {
        return "DemoContext";
    }

    getPlaceHolderExpression(): PiExpression {
        return new DemoPlaceholderExpression();
    }

    @action
    private initialize() {
        this.rootElement = new DemoInitialization().initialize();
    }
}
