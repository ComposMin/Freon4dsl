// Generated by the ProjectIt Language Generator.
import { PiElement, PiModel, PiModelInitialization } from "@projectit/core";
import { DemoConceptType, Demo, DemoModel } from "../language/gen";
import { DemoModelCreator } from "../__tests__/DemoModelCreator";

/**
 * Class DemoInitialization provides an entry point for the language engineer to
 * indicate which user model unit should be opened when a new model is requested by the user.
 * Default is to initialize a user model unit by creating an instance of the first unit property
 * in the root concept of the language.
 * Note that the model itself (i.e. the root concept which holds all model units) must be initialized as well.
 */

export class DemoInitialization implements PiModelInitialization {
    /**
     * Used to initialize a completely new model. It returns the first model unit in the model.
     */
    initialize(): PiElement {
        let model = new DemoModelCreator().createCorrectModel();
        // You may replace the default with the initial model unit of your choice
        return model.models[0];
    }

    /**
     * Returns an empty model unit within 'model' of type 'unitTypeName'.
     *
     * @param model
     * @param unitTypeName
     */
    newUnit(model: Demo, typename: DemoConceptType): PiElement {
        switch (typename) {
            case "DemoModel": {
                let unit: DemoModel = new DemoModel();
                model.models.push(unit as DemoModel);
                return unit;
            }
        }
        return null;
    }

    /**
     * Returns an empty model with name 'modelName'
     *
     * @param modelName
     *
     */
    newModel(modelName: string): PiModel {
        let model = new Demo();
        model.name = modelName;
        return model;
    }
}
