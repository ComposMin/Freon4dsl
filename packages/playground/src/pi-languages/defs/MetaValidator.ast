language PiLanguage

// begin validator definition
public modelunit PiValidatorDef {
    public name: string;
//}
//concept PiValidatorDef {
//    location: ParseLocation;
//    validatorName: string;
    languageName: string;
    conceptRules: ConceptRuleSet[];
}

concept ConceptRuleSet {
//    location: ParseLocation;
    reference conceptRef: PiConcept;
    rules: ValidationRule[];
}

abstract concept ValidationRule {
//    location: ParseLocation;
}

concept CheckEqualsTypeRule base ValidationRule {
    type1: PiLangExp;
    type2: PiLangExp;
}

concept CheckConformsRule base ValidationRule {
    type1: PiLangExp;
    type2: PiLangExp;
}

concept ExpressionRule base ValidationRule {
    exp1: PiLangExp;
    exp2: PiLangExp;
    comparator: PiComparator;
}

concept IsuniqueRule base ValidationRule {
    list: PiLangExp;
    listproperty: PiLangExp;
    comparator: PiComparator;
}

concept NotEmptyRule base ValidationRule {
    property: PiLangExp;
}

concept ValidNameRule base ValidationRule {
    property: PiLangExp;
}

limited PiComparator {
    name: string;
    Equals = { name: "="}
    LargerThen = { name: ">"}
    LargerIncluding = { name: ">="}
    SmallerThen = { name: "<"}
    SmallerIncluding = { name: "<="}
}

// end validator definition

