editor default

referenceSeparator [::::]

// begin typer definition
PiTyperDef {[
    typer
    [?istype { ${self.types horizontal separator [, ]} }]
    [?hastype { ${self.conceptsWithType horizontal separator [, ]} }]
    [?${self.anyTypeRule}]
    ${self.classifierRules vertical}
    ]}
PitConformanceOrEqualsRule {[
    ${self.myClassifier} {
        ${self.myRules}
    }
]}
PitAnyTypeRule {[
    anytype {
        ${self.myRules}
    }
    ]}
PitSingleRule {
    [ ${self.kind} ${self.exp} ;]
}
PitInferenceRule {[
    ${self.myClassifier} {
        infertype ${self.exp};
    }
]}
PitLimitedRule {[
    ${self.myClassifier} {
        ${self.statements terminator[; ]}
    }
]}
PitExpWithType {
    [(${self.inner} as ${self.expectedType})]
}
PitSelfExp {
    [self]
}
PitAnytypeExp {
    [anytype]
}
PitPropertyCallExp {
    [[?${source}.]${property}]
}
PitWhereExp {[
    ${self.otherType} where {
        ${self.conditions terminator[;]}
    }
]}
PitEquals {
    symbol = "equalsto"
}
PitConforms {
    symbol = "conformsto"
}
PitInstanceExp {
    [[?${myLimited}:]${myInstance}]
}
PitProperty {
    [${self.name} : ${self.type}]
}
PitFunctionCallExp {
    [${self.calledFunction} ( ${self.arguments horizontal separator[, ]} )]
}
