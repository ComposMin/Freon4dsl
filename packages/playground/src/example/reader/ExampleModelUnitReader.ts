// Generated by the ProjectIt Language Generator.
import { PiReader } from "@projectit/core";
import { ExampleModelUnitType, ModelUnitMetaType, ExModel } from "./../language/gen";

/**
 * All unit parsers generated by pegjs
 */
import * as ExModelParser from "./ExModelAglParser";
import { ExModelAglParser } from "./ExModelAglParser";

/**
 *   Class ExampleModelUnitReader is a wrapper for the various parsers of
 *   modelunits. It reads a file from disk, calls the javascript parser, and
 *   shows any syntax errors on the console.A
 *   Note that property 'parser' should be set, before calling the method 'parse'.
 */
export class ExampleModelUnitReader implements PiReader {
    readFromString(input: string, metatype: ModelUnitMetaType): ExampleModelUnitType {
        return this.parse(input, metatype, "");
    }

    private parse(langSpec: string, metatype: ModelUnitMetaType, filepath: string): ExampleModelUnitType {
        // set the correct parser
        // let parser: Parser; // one of the Javascript parser objects generated by pegjs.
        let parser = new ExModelAglParser();
        // if (metatype === "ExModel") {
        //     parser = ExModelParser;
        // }

        // parse the input
        let model: ExampleModelUnitType = null;
        // try {
            model = parser.parse(langSpec);
        // } catch (e) {
        //     // throw syntax error, but with extra info
        //     const errorstr = `${!!filepath ? `${filepath}:` : ``} ${e} ${
        //         e.location && e.location.start ? `[line ${e.location.start.line}, column ${e.location.start.column}]` : ``
        //     }`;
        //     throw new Error(errorstr);
        // }
        return model;
    }
}
