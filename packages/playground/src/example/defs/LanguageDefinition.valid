validator Demo for language Example

Model {
    notEmpty self.entities;
    isunique name in self.entities;
    notEmpty self.methods;
    isunique name in self.methods;
    validIdentifier; // default is 'name'
}

Entity {
    notEmpty self.attributes;
    isunique name in self.attributes;
    notEmpty self.methods;
    isunique name in self.methods;
    validIdentifier;
}

Attribute {
    validIdentifier self.name;
}

Method {
    typecheck conformsTo (self.expression, self.declaredType);
    isunique name in self.parameters;
    validIdentifier ;
}

Variable {
    validIdentifier ;
}

AbsExpression {
    typecheck equalsType( self.expr, AttributeType:Integer );
}

MultiplyExpression {
    typecheck equalsType( self.left, AttributeType:Integer );
    typecheck equalsType( self.right, AttributeType:Integer );
}

PlusExpression {
    typecheck equalsType( self.left, AttributeType:Integer );
    typecheck equalsType( self.right, AttributeType:Integer );
    typecheck conformsTo( self.left, self.right );
}

DivideExpression {
    typecheck equalsType( self.left, AttributeType:Integer );
    typecheck equalsType( self.right, AttributeType:Integer );
}

AndExpression {
    typecheck equalsType( self.left, AttributeType:Boolean );
    typecheck equalsType( self.right, AttributeType:Boolean );
}

OrExpression {
    typecheck equalsType( self.left, AttributeType:Boolean );
    typecheck equalsType( self.right, AttributeType:Boolean );
}

ComparisonExpression {
    typecheck equalsType( self.left, self.right );
}

IfExpression {
    typecheck equalsType( self.condition, AttributeType:Boolean );
    typecheck conformsTo( self.whenTrue, self.whenFalse );
}

