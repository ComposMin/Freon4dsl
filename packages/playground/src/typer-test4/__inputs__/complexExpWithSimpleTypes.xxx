UnitA complexExpWithSimpleTypes

Bag { Sequence { 12, 13, 14 }, Sequence { "string", "Str", "STRING" } } : NUMBER;
/*
Set{ true, true, false } : BOOLEAN;
Set{ true, true, false } : Set<BOOLEAN>;
Sequence { true, 12 } : STRING;
Sequence { true, 12 } : Sequence<STRING>;
Bag { Set { 12, 13, 14 }, Sequence { "string", "Str", "STRING" } } : NUMBER;
Bag { Set { 12, 13, 14 }, Sequence { "string", "Str", "STRING" } } : Bag < Collection < NUMBER > >;
Bag { Set { 12, 13, 14 }, Sequence { "string", "Str", "STRING" } } : Bag < Collection < STRING > >;
Set { 12, 13, 14 } : NUMBER;
Set { 12, 13, 14 } : Set<NUMBER>;
Bag { Set { 12, 13, 14 }, Set { 2, 3, 4 } } : NUMBER;
Bag { Set { 12, 13, 14 }, Set { 2, 3, 4 } } : Bag<Set<NUMBER>>;
Bag { Set { Set { 2, 3, 4 }, Set { 12, 13, 14 } }, Set { Set { 2, 3, 4 } } } : NUMBER;
Bag { Set { Set { 2, 3, 4 }, Set { 12, 13, 14 } }, Set { Set { 2, 3, 4 } } } : Bag < Set < Set < NUMBER > > >;
Set { } : STRING;
Set { } : Set<ANY>;
*/
